name: Secure CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:

jobs:
  # -------------------------------
  # 1️⃣ Build & Test Job
  # -------------------------------
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Run tests
        run: go test -v -coverprofile=coverage.out ./...

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.out

      - name: Build application
        run: go build -o myapp ./...

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: myapp-binary
          path: ./myapp

  # -------------------------------
  # 2️⃣ Snyk & Secret Scans Job
  # -------------------------------
  security-scans:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Snyk
        uses: snyk/actions/setup@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          snyk-version: latest

      - name: Run Snyk Code Scan
        run: snyk code test --severity-threshold=low
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

      - name: Run Snyk Dependency Scan
        run: snyk test --severity-threshold=low
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

      - name: Run Gitleaks for secrets
        uses: zricethezav/gitleaks-action@v2
        with:
          args: detect --source . --no-git --redact
        continue-on-error: true

  # -------------------------------
  # 3️⃣ Docker Build & Trivy Scan Job
  # -------------------------------
  docker-trivy:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t myapp:${{ github.sha }} .

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: myapp:${{ github.sha }}
          format: 'table'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'
          ignore-unfixed: true
        continue-on-error: true

      - name: Run Docker container to test startup
        run: docker run --rm myapp:${{ github.sha }}
        continue-on-error: true

  # -------------------------------
  # 4️⃣ OWASP ZAP Scan Job
  # -------------------------------
  owasp-zap:
    runs-on: ubuntu-latest
    needs: docker-trivy
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t myapp:${{ github.sha }} .

      - name: Run app container in background
        run: |
          docker run -d -p 8080:8080 --name myapp myapp:${{ github.sha }}
          echo "Waiting for app to start..."
          sleep 10
          docker ps -a

      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.8.0
        with:
          target: "http://localhost:8080"
          docker_name: ghcr.io/zaproxy/zaproxy:stable
        continue-on-error: true

      - name: Stop container
        if: always()
        run: docker stop myapp || true