name: Secure CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:

jobs:
  # 1️⃣ Build and Test Go
  build-test:
    runs-on: ubuntu-latest
    outputs:
      binary-path: ./myapp
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Run tests
        run: go test -v -coverprofile=coverage.out ./...

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.out

      - name: Build application
        run: go build -o myapp ./...

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: myapp-binary
          path: ./myapp

  # 2️⃣ Snyk & Gitleaks Security Scans (can run in parallel)
  security-scans:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Snyk
        uses: snyk/actions/setup@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          snyk-version: latest

      - name: Run Snyk Code Scan
        run: snyk code test --severity-threshold=low
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

      - name: Run Snyk Dependency Scan
        run: snyk test --severity-threshold=low
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

      - name: Run Gitleaks for secrets
        uses: zricethezav/gitleaks-action@v2
        with:
          args: detect --source . --no-git --redact
        continue-on-error: true

  # 3️⃣ CodeQL Analysis
  codeql:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: go

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        continue-on-error: true

  # 4️⃣ Docker Build, Scan & Push
  docker:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: myapp-binary
          path: ./myapp

      - name: Build Docker image
        run: docker build -t ghcr.io/${{ github.repository_owner }}/myapp:${{ github.sha }} .

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/myapp:${{ github.sha }}
          format: 'table'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true
          exit-code: '0'

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push Docker image
        run: docker push ghcr.io/${{ github.repository_owner }}/myapp:${{ github.sha }}

  # 5️⃣ Run container & OWASP ZAP scan
  zap-scan:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Run Docker container
        run: |
          docker run -d --name myapp-container -p 8080:8080 ghcr.io/${{ github.repository_owner }}/myapp:${{ github.sha }}
          sleep 5 # wait for container to start

      - name: Run OWASP ZAP baseline scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: 'http://localhost:8080'
        continue-on-error: true

      - name: Stop container
        run: docker stop myapp-container
